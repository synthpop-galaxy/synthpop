{   "SEED":{"random_seed":null},

    "MANDATORY":{
        "#comment1": "default directory and base for the output files",
        "name_for_output":null,
        "#comment2": "directory containing population json files",
        "model_name":"Huston2024_NSD"
    },

    "SIGHTLINES":{
        "l_set":null,
        "l_set_type":null,
        "b_set":null,
        "b_set_type": null,
        "solid_angle": null,
        "solid_angle_unit": "deg^2"
    },

    "COORDINATE_SYSTEM":{
        "sun": {
            "#comment": "Location of the Sun (kpc)",
            "x": -8.178,
            "y": 0.0,
            "z": 0.017,
            "#comment2": "Motion of the Sun (km/s) from Reid & Brunthaler (2020)",
            "u": 12.9,
            "v": 245.6,
            "w": 7.78,
            "#comment3": "direction of the solar apex in galactic coordinates in degree",
            "l_apex_deg": 56.24,
            "b_apex_deg": 22.54
        },
        "lsr":{
            "#comment": "Velocity (km/s) of the local standard of rest from SchÃ¶nrich et al. (2010).",
            "u_lsr": 1.8,
            "v_lsr": 233.4,
            "w_lsr": 0.53
        },
        "warp": {
            "#comment_1": "Settings for the warp can be overwritten from the population files.",
            "#comment_2": "This default comes from  Chen X. et al 2019.",
            "#comment_3": "r_warp = radius when the warp starts in kpc",
            "r_warp": 7.72,
            "amp_warp": 0.060,
            "#comment_4": "amp_warp_[pos/neg] can be used to specify different values for sin(phi_warp)>0 and sin(phi_warp)<0. If set to null(default), use amp_warp on both sides.",
            "amp_warp_pos": null,
            "amp_warp_neg": null,
            "#comment_5": "alpha_warp = exponent in the power law",
            "alpha_warp": 1.33,
            "#comment_6": "phi_warp_deg = angle for line of nodes; can also be in radian by specifying phi_warp_rad instead",
            "phi_warp_deg": 17.5
        }

    },

    "EXTINCTION_MAP":
        {
        "extinction_map_kwargs": {"name":"Surot", "project_3d":true, "dist_2d":8.15},
        "extinction_law_kwargs":
            [{"name":"SODC", "R_V":2.5}]
        },

    "POPULATION_GENERATION":{
        "#comment1":"Maximum distance from sun",
        "max_distance":25,
        "#comment2":"Step size, in kpc",
        "distance_step_size":0.10,

        "#comment3":"Solid angle of cone/pyramid [deg^2]",
        "solid_angle":1e-04,
        "window_type":{"window_type":"cone" , "#kwargs for windowtype": null},
        "#window_type_Not_implemented_yet": ["pyramid", "side_ratio_as_l/b"],

        "#comment4":"Limiting mass [min_mass, max_mass]",
        "mass_lims":{"min_mass":0.08,"max_mass":100},
        "#comment5":"Number of points used for estimating the total mass in a slice ",
        "N_mc_totmass":10000,

        "#comment6":"method to estimate the mass loss correction",
        "lost_mass_option": 1,
        "N_av_mass":50000,

        "#comment7":"Flag for estimate the velocities for all stars at once",
        "kinematics_at_the_end":false,

        "#comment8": "scale down the number of generated stars n_gen = (n/scale_factor)",
        "scale_factor": 1,
        "#comment9": "reduce the generation of lowmass stars which are to faint",
        "skip_lowmass_stars": false,
        "#comment10": "Evolve the number of stars in chunks of size",
        "chunk_size": 250000
    },

    "ISOCHRONE_INTERPOLATION":{
        "#comment":"examples to use the code with different Isochrones System and different Interpolators",
        "#comment2":"#if set to null/None: use a default one read from models/{model_name}/defaults/evolution.json",
        "evolution_class":[
               {"name":"MIST", "interpolator":"LagrangeInterpolator","min_mass":0.1, "max_mass":0.7},
                {"name":"MIST", "interpolator":"CharonInterpolator"}
            ]
        },

    "PHOTOMETRIC_OUTPUTS":{
        "#comment1":"Limiting magnitude- [system, band, limit, opt] #opt ='keep','remove', use 23.975533 for w146ab=25",
        "maglim":["W146", 23.975533, "remove"],
        "#comment2":"Magnitude systems and bands to generate for each star.",
        "chosen_bands": ["R062","Z087","Y106","J129","W146","H158","F184", "Bessell_U", "Bessell_B", "Bessell_V", "Bessell_R", "Bessell_I", "VISTA_J", "VISTA_H", "VISTA_Ks"],
        "#comment3":"use '[magsys,...]' to take all magnitudes from a given system",
        "#comment4":"or '{magsys1:[filter1, filter2,...], magsys2:'all',...}' to avoid confusion",
        "#comment5":"either specifying the effective wavelength in microns for each filter",
        "#comment6":"or a string to specify a separate json file where this can be found",
        "eff_wavelengths": {
            "json_file":"AAA_effective_wavelengths.json"
            },
        "#comment7":"true for observed magnitude, false for absolute magnitudes",
        "obsmag":true,

        "#comment8": "optional properties  from the isochrones. opt_iso_props are the original column names in the Isochrones and col_names are the column names for the output",
        "opt_iso_props":["log_L", "log_Teff", "log_g", "[Fe/H]","log_R", "phase"],
        "col_names":["logL", "logTeff", "logg" ,"Fe/H_evolved","log_radius","phase"]
    },
    
    "OUTPUT":{
        "#comment11":"specify a script and function for advanced post processing",
        "#comment12": "should be either a dictionary as follows or null",

        "# advanced_post_processing": {
            "name": "sub class name",
            "filename": "optional path of the file ",
            "further_keywords": "additional keyword arguments"
            },
        "post_processing_kwargs": [{"name":"ProcessDarkCompactObjects", "remove":false}, {"name":"ConvertMistMags", "conversions":{"AB": ["R062", "Z087", "Y106", "J129", "W146", "H158", "F184"]}}],
        
        "#comment1":"if output_location is '' or null it is replaced with the synthpop directory",
        "#comment2":"if output_location ends with '/' it uses output_location/model_base_name as directory",
        "output_location":"outputfiles/default",
        "#comment5": "pattern for the output file (without directory and extension) interpreted by string.format() ",
        "#comment6": "The following keys are available:",
        "#comment7": "model_base_name (str), model_name (str), l_deg (float), b_deg(float),",
        "#comment8": "solid_angle (float), date (datetime.date object), time (datetime.time object)",
        "output_filename_pattern": "{name_for_output}_l{l_deg:.3f}_b{b_deg:.3f}",
        "#comment9": "Filetypes from pandas: csv, json, html, xml, excel, hdf5, feather, parquet, stata, pickle, sql",
        "#comment10": "Filetypes astropy: fits and vot" ,
        "output_file_type": "csv",

        "overwrite": true

    }
}